using System;
usingSystem.Data;
usingSystem.Configuration;
usingSystem.Web;
usingSystem.Collections;
usingSystem.Text;
usingMicrosoft.VisualBasic;
usingSystem.Web.Security;
usingSystem.Web.UI;
usingSystem.Web.UI.WebControls;
usingSystem.Web.UI.WebControls.WebParts;
usingSystem.Web.UI.HtmlControls;
usingSystem.Runtime.InteropServices;

/// <summary>
/// Summary description for MsgBox
/// </summary>
public class MsgBox
{
private void WebMsgBox()
    {
    }
protected static HashtablehandlerPages = new Hashtable();
public static void Show(string Message)
    {
if (!(handlerPages.Contains(HttpContext.Current.Handler)))
        {
            Page currentPage = (Page)HttpContext.Current.Handler;
if (!((currentPage == null)))
            {
                Queue messageQueue = new Queue();
messageQueue.Enqueue(Message);
handlerPages.Add(HttpContext.Current.Handler, messageQueue);
currentPage.Unload += new EventHandler(CurrentPageUnload);
            }
        }
else
        {
            Queue queue = ((Queue)(handlerPages[HttpContext.Current.Handler]));
queue.Enqueue(Message);
        }
    }
private static void CurrentPageUnload(object sender, EventArgs e)
    {
        Queue queue = ((Queue)(handlerPages[HttpContext.Current.Handler]));
if (queue != null)
        {
StringBuilder builder = new StringBuilder();
intiMsgCount = queue.Count;
builder.Append("<script language='javascript'>");
stringsMsg;
while ((iMsgCount> 0))
            {
iMsgCount = iMsgCount - 1;
sMsg = System.Convert.ToString(queue.Dequeue());
sMsg = sMsg.Replace("\"", "'");
builder.Append("alert( \"" + sMsg + "\" );");
            }
builder.Append("</script>");
handlerPages.Remove(HttpContext.Current.Handler);
HttpContext.Current.Response.Write(builder.ToString());
        }
    } 
}
